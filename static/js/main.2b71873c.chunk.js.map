{"version":3,"sources":["web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["web3","Web3","undefined","window","ethereum","request","method","abi","inputs","stateMutability","type","constant","payable","signature","name","outputs","Object","eth","Contract","App","state","manager","balance","value","message","numPlayers","error","onSubmit","event","a","preventDefault","getAccounts","accounts","setState","lottery","methods","joinRaffle","send","from","utils","toWei","call","getBalance","options","address","onClick","selectWinnerRestricted","winner","this","navigator","clipboard","writeText","alert","className","id","href","target","rel","src","alt","clickToCopyManager","fromWei","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b71873c.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n \r\nlet web3 = new Web3();\r\nif (window.ethereum !== undefined){\r\n    window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n \r\n    web3 = new Web3(window.ethereum);\r\n}\r\n \r\nexport default web3;","import web3 from './web3';\r\n\r\n// Ethereum address of the lottery contract.\r\nconst address = '0x72E67b75EA7F21D704618eFCA3ae84eF64e5F4D1';\r\n\r\n// ABI for the lottery contract. \r\nconst abi = [\r\n  {\r\n    inputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n    constant: undefined,\r\n    payable: undefined,\r\n    signature: 'constructor'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getParticipants',\r\n    outputs: [ [{ name: \"\", type: \"address[]\" }] ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n    constant: true,\r\n    payable: undefined,\r\n    signature: '0x5aa68ac0'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getRaffleCurrentValue',\r\n    outputs: [ [Object] ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n    constant: true,\r\n    payable: undefined,\r\n    signature: '0xeca8c800'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'joinRaffle',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n    constant: undefined,\r\n    payable: true,\r\n    signature: '0x136b3392'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'manager',\r\n    outputs: [ [{ name: \"\", type: \"address\" }] ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n    constant: true,\r\n    payable: undefined,\r\n    signature: '0x481c6a75'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'numPlayers',\r\n    outputs: [ [{ name: \"\", type: \"uint256\" }] ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n    constant: true,\r\n    payable: undefined,\r\n    signature: '0x97b2f556'\r\n  },\r\n  {\r\n    inputs: [ [Object] ],\r\n    name: 'players',\r\n    outputs: [ [Object] ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n    constant: true,\r\n    payable: undefined,\r\n    signature: '0xf71d96cb'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'selectWinnerRestricted',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n    constant: undefined,\r\n    payable: undefined,\r\n    signature: '0x17b96fce'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'winner',\r\n    outputs: [ [{ name: \"\", type: \"address\" }] ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n    constant: true,\r\n    payable: undefined,\r\n    signature: '0xdfbf53ae'\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'winnerHasBeenChosen',\r\n    outputs: [ [Object] ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n    constant: true,\r\n    payable: undefined,\r\n    signature: '0x966b8c1d'\r\n  }\r\n]\r\n\r\n  // Export local instance of the contract for use in this react project.\r\n  export default new web3.eth.Contract(abi, address);","import React, { Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\n\nclass App extends Component {\n\n  state = {\n    manager: '',\n    balance: '',\n    value: '',\n    message: '',\n    numPlayers: '0',\n    error: ''\n  };\n\n  async componentDidMount() {\n    try{\n      const manager = await lottery.methods.manager().call();\n      const numPlayers = await lottery.methods.numPlayers().call();\n\n      const balance = await web3.eth.getBalance(lottery.options.address);\n\n      this.setState({ manager, balance, numPlayers });\n    } catch (err){\n      this.setState({ error: true })\n    }\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n\n      this.setState({ message: 'Waiting for the transaction to complete...' })\n  \n      await lottery.methods.joinRaffle().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n      });\n  \n      const numPlayers = await lottery.methods.numPlayers().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n  \n      this.setState({ message: 'You have been entered!', numPlayers, balance, value: '' })\n    } catch(error) {\n      this.setState({ message: 'An error occurred. Please try again.' });\n    }\n    \n  }\n\n  onClick = async (event) => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n\n      this.setState({ message: 'Waiting for the transaction to choose a winner...' })\n\n      await lottery.methods.selectWinnerRestricted().send({\n        from: accounts[0],\n      });\n\n      const numPlayers = await lottery.methods.numPlayers().call();\n      const winner = await lottery.methods.winner().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n\n      this.setState({ message: `A winner has been chosen! The winner is address ${ winner } and the lottery was reset.`, numPlayers, balance, value: '' })\n    } catch(error) {\n      this.setState({ message: 'An error occurred. Please try again.' });\n    }\n    \n  }\n\n  clickToCopyManager(manager) {\n    navigator.clipboard.writeText(manager);\n  \n    alert(\"Copied the text: \" + manager);\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <header className=\"App-header\">\n          { this.state.error &&\n          <div className='row'id='errorMessage'>\n            <strong>\n              The MetaMask browser extension was not detected. This application requires \n              <a href='https://www.google.com/search?q=metamask+extension' target='_blank' rel=\"noreferrer\" > the MetaMask browser extension </a>\n              to function properly.\n            </strong>\n          </div>\n          }\n          <img id=\"ethLogo\" src=\"https://ethereum.org/static/c3bcc8c47890ffd2a2c329972c73d0fd/702da/ethereum-logo-portrait-black-gray.webp\" alt=\"Ethereum Lottery Contract\" />\n          <div className='row'>\n            <h2>Ethereum Lottery Contract</h2>\n          </div>\n          <div className='row'>\n            <h3>Made With Solidity and React by <a href ='https://www.richardkronick.com/' target='_blank' rel=\"noreferrer\" >Richard Kronick</a></h3>\n          </div>\n          <hr />\n          <div className='row'>\n            <h4>*Note that this is on the Ethereum Rinkeby test network ONLY - This is a demo for development purposes (not real ETH).</h4>\n          </div>\n          <p><a href='https://faucets.chain.link/rinkeby' target='_blank' rel=\"noreferrer\" >Need some test ETH?</a></p>\n          <p>See the <a href='https://github.com/richardkronick/Ethereum-Rafflle-Lottery-Solidity-Contract/blob/main/lottery.sol' target='_blank' rel=\"noreferrer\" >Ethereum contract written in Solidity here</a> and the <a href='https://github.com/richardkronick/raffle-lottery-ethereum-react' target='_blank' rel=\"noreferrer\" >React code here.</a></p>\n        <p>\n        <hr />\n          This Ethereum lottery contract is managed by the following address: <span className='ethAddress'>{ this.state.manager }   </span>\n          <button className=\"myBtn btn btn-sm\" onClick={() => this.clickToCopyManager(this.state.manager)}>Click to Copy</button>\n          <hr />\n          Currently there are { this.state.numPlayers } participant(s) who have entered to win the lottery contract.\n          <hr />\n          The current prize value is { web3.utils.fromWei(this.state.balance, 'ether') } ETH.\n          <hr />\n          </p>\n          <form onSubmit={ this.onSubmit }>\n            <strong>Enter the ETH lottery and try your luck!</strong>\n            <div>\n              <label>Amount of ETH to enter:</label>\n              <input value={ this.state.value } onChange={ event => this.setState({ value: event.target.value }) } />\n              <button className=\"myBtn btn\">Enter and Try Your Luck!</button>\n            </div>\n          </form>\n          <div>\n            <span id='message'><strong>{ this.state.message }</strong></span>\n          </div>\n          <hr />\n          <p id=\"rules\"><strong>Rules: (read before entering)</strong> You will receive one entry per 0.01 ETH (So, for example, 0.05 ETH will give you 5 total entries),\n          up to 100 entries per transaction (1 ETH), regardless of how much you send.\n          In other words, sending anything over 1 ETH, will result in 100 entries for you.\n          Once there have been more than 200 entries, a winner will be chosen automatically at random.\n          Or the manager can choose a winner at any time below.\n          <hr />\n          </p>\n          <div>\n            <strong>Are you the manager? If so you can pick a winner at any time.</strong>\n          </div>\n          <button type=\"button\" className=\" myBtn btn\" onClick={ this.onClick }>Select a random winner!</button>\n          </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}